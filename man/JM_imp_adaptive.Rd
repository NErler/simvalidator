% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JM_imp_adaptive.R
\name{JM_imp_adaptive}
\alias{JM_imp_adaptive}
\title{Run a joint model with adaptively increasing the number of iterations}
\usage{
JM_imp_adaptive(
  formula,
  data,
  df_basehaz = 6,
  n.chains = 3,
  n.adapt = 100,
  n.iter = 0,
  thin = 1,
  monitor_params = c(analysis_main = TRUE),
  auxvars = NULL,
  timevar = NULL,
  refcats = NULL,
  models = NULL,
  no_model = NULL,
  assoc_type = NULL,
  trunc = NULL,
  shrinkage = FALSE,
  ppc = TRUE,
  seed = NULL,
  scale_vars = NULL,
  hyperpars = NULL,
  modelname = NULL,
  modeldir = NULL,
  keep_model = FALSE,
  overwrite = NULL,
  quiet = TRUE,
  progress.bar = "text",
  warn = TRUE,
  mess = TRUE,
  keep_scaled_mcmc = FALSE,
  inits_iter = 200,
  what = c("RinvD", "invD", "tau", "b"),
  extra_iter = NULL,
  minsize = 500L,
  step = 200L,
  subset = NULL,
  cutoff = 1.2,
  prop = 0.8,
  gr_max = 1.5,
  max_try = 5L,
  cc = FALSE,
  ...
)
}
\arguments{
\item{formula}{a two sided model formula (see \code{\link[stats]{formula}})
or a list of such formulas; (more details below).}

\item{data}{a \code{data.frame} containing the original data
(more details below)}

\item{df_basehaz}{degrees of freedom for the B-spline used to model the
baseline hazard in proportional hazards models
(\code{coxph_imp} and \code{JM_imp})}

\item{n.chains}{number of MCMC chains}

\item{n.adapt}{number of iterations for adaptation of the MCMC samplers
(see \code{\link[rjags]{adapt}})}

\item{n.iter}{number of iterations of the MCMC chain (after adaptation;
see \code{\link[rjags]{coda.samples}})}

\item{thin}{thinning interval (integer; see \code{\link[coda]{window.mcmc}}).
For example, \code{thin = 1} (default) will keep the MCMC samples
from all iterations; \code{thin = 5} would only keep every 5th
iteration.}

\item{monitor_params}{named list or vector specifying which parameters
should be monitored (more details below)}

\item{auxvars}{optional; one-sided formula of variables that should be used
as predictors in the imputation procedure (and will be imputed
if necessary) but are not part of the analysis model(s).
For more details with regards to the behaviour with
non-linear effects see the vignette on
\href{https://nerler.github.io/JointAI/articles/ModelSpecification.html#auxvars}{Model Specification}}

\item{timevar}{name of the variable indicating the time of the measurement of
a time-varying covariate in a proportional hazards survival
model (also in a joint model).
The variable specified in
"timevar" will automatically be added to "no_model".}

\item{refcats}{optional; either one of \code{"first"}, \code{"last"},
\code{"largest"} (which sets the category for all categorical
variables) or a named list specifying which category should
be used as reference category per categorical variable.
Options are the category label, the category number,
or one of "first" (the first category),
"last" (the last category) or "largest" (chooses the category
with the most observations).
Default is "first". If reference categories are specified for
a subset of the categorical variables the default will be
used for the remaining variables.
(See also \code{\link[JointAI]{set_refcat}})}

\item{models}{optional; named vector specifying the types of models for
(incomplete) covariates.
This arguments replaces the argument \code{meth} used in
earlier versions.
If \code{NULL} (default) models will be determined
automatically based on the class of the respective columns of
\code{data}.}

\item{no_model}{optional; vector of names of variables for which no model
should be specified.
Note that this is only possible for completely observed
variables and implies the assumptions of independence between
the excluded variable and the incomplete variables.}

\item{assoc_type}{named vector specifying the type of the association used
for a time-varying covariate in the linear predictor of the
survival model when using a "JM" model.
Implemented options are "underl.value"
(linear predictor; default for covariates modelled using a
Gaussian, Gamma, beta or log-normal distribution)
covariates) and "obs.value" (the observed/imputed value;
default for covariates modelled using other distributions).}

\item{trunc}{optional; named list specifying limits of truncation for the
distribution of the named incomplete variables (see the vignette
\href{https://nerler.github.io/JointAI/articles/ModelSpecification.html#functions-with-restricted-support}{ModelSpecification})}

\item{shrinkage}{optional; either a character string naming the shrinkage
method to be used for regression coefficients in all models
or a named vector specifying the type of shrinkage to be
used in the models given as names.}

\item{ppc}{logical: should monitors for posterior predictive checks be
set? (not yet used)}

\item{seed}{optional; seed value (for reproducibility)}

\item{scale_vars}{optional; named vector of (continuous) variables that will
be centred and scaled (such that mean = 0 and sd = 1)
when they enter a linear predictor to improve
convergence of the MCMC sampling. Default is that all
numeric variables and integer variables with >20 different
values will be scaled.
If set to \code{FALSE} no scaling will be done.}

\item{hyperpars}{optional; list of hyper-parameters, as obtained by
\code{\link[JointAI]{default_hyperpars}()}}

\item{modelname}{optional; character string specifying the name of the model
file (including the ending, either .R or .txt).
If unspecified a random name will be generated.}

\item{modeldir}{optional; directory containing the model file or directory
in which the model file should be written. If unspecified a
temporary directory will be created.}

\item{keep_model}{logical; whether the created JAGS model file should be
saved or removed from (\code{FALSE}; default) when the
sampling has finished.}

\item{overwrite}{logical; whether an existing model file with the specified
\code{<modeldir>/<modelname>} should be overwritten.
If set to \code{FALSE} and a model already exists, that
model will be used.
If unspecified (\code{NULL}) and a file exists, the user is
asked for input on how to proceed.}

\item{quiet}{logical; if \code{TRUE} then messages generated by
\strong{rjags} during compilation as well as the progress bar
for the adaptive phase will be suppressed,
(see \code{\link[rjags]{jags.model}})}

\item{progress.bar}{character string specifying the type of progress bar.
Possible values are "text", "gui", and "none" (see
\code{\link[rjags]{update}}).
Note: when sampling is performed in parallel it is
currently not possible to display a progress bar.}

\item{warn}{logical; should warnings be given? Default is
\code{TRUE}.}

\item{mess}{logical; should messages be given? Default is
\code{TRUE}.}

\item{keep_scaled_mcmc}{should the "original" MCMC sample
(i.e., the scaled version returned by
\code{coda.samples()}) be kept?
(The MCMC sample that is re-scaled to the scale of
the data is always kept.)}

\item{inits_iter}{number of iteration used for the model that generates the
initial values}

\item{what}{vector of node types}

\item{extra_iter}{number of iterations that should be added to the model if
the Gelman-Rubin criterion is too large}

\item{minsize}{the minimum number of iterations to be considered}

\item{step}{the step size in which iterations are omitted as burn-in}

\item{subset}{subset of parameters on which the Gelman-Rubin criterion should
be evaluated. Follows the logic used in \strong{JointAI}}

\item{cutoff}{the cut-off used for the Gelman Rubin criterion}

\item{prop}{proportion of parameters that need to be below the \code{cutoff}}

\item{gr_max}{maximum allowed value for the Gelman-Rubin criterion}

\item{max_try}{maximum number of runs of \code{JointAI::add_samples()}}

\item{cc}{logical: should the model be run as a complete case analysis?}

\item{...}{additional, optional arguments (not used)}
}
\description{
Run a joint model with adaptively increasing the number of iterations
}
